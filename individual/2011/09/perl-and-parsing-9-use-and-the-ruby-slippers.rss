<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->
<!DOCTYPE rss PUBLIC "-//Netscape Communications//DTD RSS 0.91//EN" "http://my.netscape.com/publish/formats/rss-0.91.dtd">

<rss version="0.91">
  <channel>
    <title>Ocean of Awareness   </title>
    <link>http://jeffreykegler.github.com/Ocean-of-Awareness-blog</link>
    <description>Ocean of Awareness.</description>
    <language>en</language>

  <item>
    <title>Perl and Parsing 9: &quot;Use&quot; and the Ruby Slippers</title>
    <link>http://jeffreykegler.github.com/Ocean-of-Awareness-blog/2011/09/19#perl-and-parsing-9-use-and-the-ruby-slippers</link>
    <description>&lt;p&gt;
In this post, I talk about how
Perl 5 parses its
&lt;code class=&quot;prettyprint&quot;&gt;use&lt;/code&gt; statement.
The &lt;code class=&quot;prettyprint&quot;&gt;use&lt;/code&gt; statement
is implemented with
what I have named
&lt;a href=&quot;http://blogs.perl.org/users/jeffrey_kegler/2010/06/parsing-with-ruby-slippers.html&quot;&gt;
&quot;Ruby Slippers&quot; parsing&lt;/a&gt;.
The idea is that you parse with a convenient grammar,
but one which is too simple to actually describe the language
you are parsing.
For example, if you are parsing HTML, the grammar might assume
all start tags have end tags.
&lt;/p&gt;
&lt;p&gt;
Whenever the simplified grammar has trouble parsing,
the lexer fixes the situation by pretending the input
is what the parser wants to see.
The parser is like Dorothy in
the &lt;em&gt;Wizard of Oz&lt;/em&gt;, who really would
like to be back in Kansas.
The lexer is like the good witch,
Glenda, who assures Dorothy that,
because of her Ruby Slippers,
Dorothy really can be wherever she wants to be.
&lt;/p&gt;

&lt;p&gt;
Few &quot;new&quot; programming ideas are so new
that they have no
precedent in previous practice.
Perl 5 put the Ruby Slippers technique
to work well before I described and named it.
Its code captures the two essential elements of
Ruby Slippers parsing.
&lt;/p&gt;
&lt;h2&gt;The Syntax of the &lt;code class=&quot;prettyprint&quot;&gt;use&lt;/code&gt; Statement&lt;/h2&gt;
&lt;p&gt;
As a reminder, the 
&lt;code class=&quot;prettyprint&quot;&gt;use&lt;/code&gt; statement comes in several forms.
Most of them are &lt;a href=&quot;#MODULE&quot;&gt;module&lt;/a&gt;
requests --
that is, they request the loading of a module.
In the long form of the module request, a version number
is specified as well.  The version number is usually
interpreted as the minimum acceptable version of
that module.
&lt;pre&gt;

use Module VERSION
&lt;/pre&gt;
For example,
&lt;code class=&quot;prettyprint&quot;&gt;
&lt;pre&gt;
use List::Util 1.21;
&lt;/pre&gt;
&lt;/code&gt;</description>
  </item>
  </channel>
</rss>
