<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->
<!DOCTYPE rss PUBLIC "-//Netscape Communications//DTD RSS 0.91//EN" "http://my.netscape.com/publish/formats/rss-0.91.dtd">

<rss version="0.91">
  <channel>
    <title>Ocean of Awareness   </title>
    <link>http://jeffreykegler.github.com/Ocean-of-Awareness-blog</link>
    <description>Ocean of Awareness.</description>
    <language>en</language>

  <item>
    <title>&lt;h2&gt;Domain-Specific Languages made simple&lt;/h2&gt;</title>
    <link>http://jeffreykegler.github.com/Ocean-of-Awareness-blog/2012/08/24#dsl</link>
    <description>&lt;h3&gt;Writing your own language&lt;/h3&gt;
&lt;p&gt;Creating your own languages has been A Big Deal(tm).
What if you could create a simple language in hours or minutes?
But there has been a serious obstacle to this up to now.
No practical parser &quot;just parsed&quot; BNF.
With Marpa, that restriction is lifted.
&lt;p&gt;
In this post, I will describe
a small, sample Marpa domain-specific language (DSL).
In designing it I am inspired by Mark Dominus's
description of the
&quot;Worse is Better&quot; philosophy,
and Blosxom's implementation of it.
This DSL is kept very simple.
The intent is that the reader will build
on it.
&lt;h3&gt;A calculator&lt;/h3&gt;
This DSL is a calculator.
Calculators are a familiar example.
And, after all, whatever tool you build this
DSL into, it will probably be useful
to have a calculator as part of it.</description>
  </item>
  </channel>
</rss>
