A Configurable HTML Parser
    <p>
      <!--
      marpa_r2_html_fmt --no-added-tag-comment
      -->
      This post introduces an HTML parser which is both liberal and configurable.
      Marpa::R2::HTML allows detailed
      configuration of new tags
      and reconfiguration of existing tags,
    </p><p>
      In this post, I'd like to start simple.
      Let's suppose we have a new tag, call it
      <code>
        &lt;acme&gt;</code>.
      Already, the non-configurable version of Marpa, like most browsers,
      would recognize this tag.
      But they'd simply give it a default configuration,
      one which is usually very liberal --
      liberal meaning it allowed the tag to contain just about anything,
      and go just about anywhere.
      Let's try to be more restrictive.
    </p><h3>
      Block vs. inline</h3><p>
      In this post
      I am going to assume that the reader knows,
      or will look up what he needs to know,
      about HTML.
      But block vs. inline is a essential HTML concept
      which is often ignored -- even the excellent Wikipedia page on HTML
      does not define "inline", although it uses the term in the technical
      sense twice.
      Since the concept is also central to this post,
      let me briefly summarize it.
    </p><p>
      Quoting from the
      <a href="http://www.w3.org/TR/1999/PR-html40-19990824/sgml/dtd.html#inline">
        HTML 4.01 Strict DTD</a>,
    </p><blockquote>
      <pre>
      HTML has two basic content models:

        %inline;     character level elements and text strings
        %block;      block-like elements e.g. paragraphs and lists
</pre>
    </blockquote>
    <p>
      There is also what I will call a "mixed flow",
      which can contain anything that
      can appear in either a block or inline flow.
      (What I call a mixed flow is
      simply called a "flow"
      in the HTML 4.01 DTD.)
    </p><p>
      Significant in the examples are
      <code>
        &lt;p&gt;</code>,
      which is a block element that contains an inline flow and
      <code>
        &lt;span&gt;</code>,
      which is an inline element that contains an inline flow.
      The <code>&lt;body&gt;</code> tag is an important structural tag,
      which contains an block flow.
      <p>
      For simplicity I am following HTML 4.01 DTD -- HTML 5
      uses radically different terminology and is more liberal
      in what it allows.
      These differences among standards are an important reason to want
      an HTML parser to be configurable.
    </p>
    <h3>
      Controlling element context</h3>
    <p>
      Let's define the
      <code>
        &lt;acme&gt;</code>
      tag
      to be an inline tag with inline contents.
      This is done by adding the following line to the
      Marpa::R2::HTML grammar configuration file:
    </p>
<blockquote><pre>
ELE_marpa is a FLO_inline included in GRP_inline
</pre></blockquote><p>
      Let's take as our HTML, the following:
    </p>
<blockquote><pre>
&lt;marpa&gt;-during-&lt;span&gt;-more inline stuff-&lt;p&gt;-new block-
</pre></blockquote><p>
      Here's the result,
      with tags added to show the structure
      in detail.
    </p>
<!-- examples/acme-inline-inline.out -->
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;
      &lt;acme&gt;
        -during-&lt;span&gt;
          -more inline stuff-&lt;/span&gt;&lt;/acme&gt;&lt;/p&gt;&lt;p&gt;
      -new block-
    &lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</pre></blockquote>
<!-- examples/acme-block-inline.out -->
<blockquote><pre>
ELE_acme is a FLO_x included in GRP_y
</pre></blockquote>
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;acme&gt;
      -during-&lt;span&gt;
        -more inline stuff-&lt;/span&gt;&lt;/acme&gt;&lt;p&gt;
      -new block-
    &lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
    <h3>
      The grammar configuration file</h3>
    <h3>
      Controlling element content</h3>
</pre></blockquote>
<!-- examples/acme-block-mixed.out -->
<blockquote><pre>
ELE_acme is a FLO_x included in GRP_y
</pre></blockquote>
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;acme&gt;
      -during-&lt;span&gt;
        -more inline stuff-&lt;/span&gt;&lt;p&gt;
        -new block-
      &lt;/p&gt;&lt;/acme&gt;&lt;/body&gt;
&lt;/html&gt;
</pre></blockquote>
<!-- examples/acme-block-block.out -->
<blockquote><pre>
ELE_acme is a FLO_x included in GRP_y
</pre></blockquote>
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;acme&gt;
      &lt;p&gt;
        -during-&lt;span&gt;
          -more inline stuff-&lt;/span&gt;&lt;/p&gt;&lt;p&gt;
        -new block-
      &lt;/p&gt;&lt;/acme&gt;&lt;/body&gt;
&lt;/html&gt;
</pre></blockquote>
<!-- examples/acme-block-pcdata.out -->
<blockquote><pre>
ELE_acme is a FLO_x included in GRP_y
</pre></blockquote>
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;acme&gt;
      -during-&lt;/acme&gt;&lt;p&gt;
      &lt;span&gt;
        -more inline stuff-&lt;/span&gt;&lt;/p&gt;&lt;p&gt;
      -new block-
    &lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</pre></blockquote>
<!-- examples/acme-block-empty.out -->
<blockquote><pre>
ELE_acme is a FLO_x included in GRP_y
</pre></blockquote>
<blockquote><pre>
&lt;html&gt;
  &lt;head&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;acme&gt;
    &lt;/acme&gt;&lt;p&gt;
      -during-&lt;span&gt;
        -more inline stuff-&lt;/span&gt;&lt;/p&gt;&lt;p&gt;
      -new block-
    &lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;
</pre></blockquote>
