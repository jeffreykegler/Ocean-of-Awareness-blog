Parsing Ada Lovelace
  <h3>The application</h3><p><!--
      marpa_r2_html_fmt --no-added-tag-comment --no-ws-ok-after-start-tag
      -->My most recent project is adding
      Abstract Syntax Forests (ASF's) to my Marpa parser.
      Marpa has long supported ambiguous parsing,
      and allowed users to iterate through,
      and examine,
      all the parses of an ambiguous parse.
      This was more than enough for most applications.
    </p>
    <p>
      But most applications will benefit from better ways to explore
      and exploit ambiguity.
      Applications which want nothing to do with ambiguous parsing can benefit
      from a tool that help detect it which it occurs by accident.
      And there are applications which use highly ambiguous grammars,
      and need efficient and effective ways to select among
      and 
      manipulate very large sets of ambiguous parses,
      The most visible among these is 
    Natural Language Processing (NLP),
    </p>
    NLP is a vast sea of difficulties.
    This post, devoted to describing my primary test case,
    will probably be the first of several posts describing my
    attempts to dip Marpa's toes into the edge of this sea.
    Veteran observers of NLP will know enough not to get excited
    over preliminary result but,
    as we'll see at the end,
    Marpa in fact seems to be fairly well.
    <p>
    <p>Writing an efficient ASF in not a simple matter.
      The naive implementation, as a set of fully expanded
      AST's, consumes resources that are
      exponential in the size of the input.
      Translation: it quickly becomes unuseable.
      In fully expanded AST's,
      many of the subtrees will be identical,
      and for an ASF to be useful it needs to take
      advantage of that fact.
    </p>
    <h3>Ada Lovelace</h3>
    <p>Natural Language Processing (NLP) is
      one application that requires working with highly ambiguous parses.
      I picked as an example to work with,
      an quote from Ada Lovelace.
      It have proven very interesting from a number of points of view.
    </p>
    <p>
      Ada, Countess of Lovelace, wrote the first paper
      that separates clearly separates computers and software, on one hand,
      from caculators and hardware, on the other.
      The paper makes clear she know the importance of this separation.
      Ada was working with Charles Babbage,
      who did all of the hardware design,
      and most of the actual coding in her paper.
      But the ideas in her paper are hers,
      not Babbage's.
    </p><p>
      Why would Babbage
      ignore obvious implications of his
      own invention?
      The answer is that,
      while these implications are obvious to us,
      they simply did not fit into Babbage's view of the world,
      and the view held by almost everyone in his society then.
      In 1843, the most significant aspect of the world was your duty to embrace
      Good and avoid Evil.
      In one form or another,
      pretty much everyone sees that as still the case today,
      But if you have the duty to avoid Evil,
      it is because you have Reason,
      which allows you to distinguish Good from Evil.
      Once once starts talking about machines which not only
      calculate, but manipulate the equations they use to calculate
      and compose music -- well, you were getting way too
      Mary Shelley for a lot of people.
    </p>
    <p>
      These days children, not long after they learn to talk,
      come to understand that games and game machines are two
      distinct things,
      and that while the game software is intangible,
      it is nonetheless a very real thing
      and necessary to "animate" the game machine.
      By the time modern children come to decide whether they has a soul
      or not, animated but soulless entities are part of their landscape.
      For Babbaage's generation, this was way too Mary Shelly.
    </p>
    <p>But Ada was the poet Byron's daughter.
      Pushing boundaries and shocking contemporaries
      was her inheritance.
      And mathematics were more her interest.
      Babbage was happy to delegate these complicated and unsettling matters
      to her.
      As
      <a href="http://www.fourmilab.ch/babbage/hpb.html">his son put it</a>,
      Babbage considered
    </p><blockquote>
      the Paper by Menabrea, translated with notes by Lady Lovelace,
      published in volume 3 of Taylor's 'Scientific Memoirs," as quite disposing of the mathematical aspect of the invention.
    </blockquote>
    <h3>On reading Ada</h3>
    <p>Ada's notes are worth reading and pondering,
      but they present many layers of difficulties to the modern reader.
      Among them:
    </p><ul>
      <li>They are in Victorian English.  Long, complex sentences were encouraged,
        and considered especially appropriate when making an difficult and important point.
      </li>
      <li>They are mathemetical
      </li>
      <li>Within math, their focus is on topics
        which are not important for modern computer programmers.
      </li>
      <li>Ada does not have her terminology ready-made.
        For example, she speaks of computing both symbolic results and numeric data,
        and attaching one to the other.
        She clearly understand that the symbolic results can represent operations.
        She also clearly understands that
        numeric data can
        represent not just numbers, but notes, positions in a loom, or computer operations.
        She does not speak of objects, classes or methods.
        Is this because she does not have the idea,
        or because the terminology does not yet exist?
      </li>
      <li>Where her terminology is ready-made, it is now archaic.
      </li>
      <li>She connects mathematics and philosophy in a way that was not just understood then,
        but expected and demanded.
        Unfortunately, modern readers now often see that sort of discussion as
        irrelevant, or even as a sign of inability to come to the point.
      </li>
    </ul>
    <p>
    </p><h3>The quote</h3>
    <blockquote>
      Those who view mathematical science,
      not merely as a vast body of abstract and immutable truths,
      whose intrinsic beauty,
      symmetry and logical completeness,
      when regarded in their connexion together as a whole,
      entitle them to a prominent place in the interest of all profound
      and logical minds,
      but as possessing a yet deeper interest for the human race,
      when it is remembered that this science constitutes the language
      through which alone we can adequately express the great facts of
      the natural world,
      and those unceasing changes of mutual relationship which,
      visibly or invisibly,
      consciously or unconsciously to our immediate physical perceptions,
      are interminably going on in the agencies of the creation we live amidst:
      those who thus think on mathematical truth as the instrument through
      which the weak mind of man can most effectually read his Creator's
      works,
      will regard with especial interest all that can tend to facilitate
      the translation of its principles into explicit practical forms.
    </blockquote>
    <h3>Ada, the bullet point version</h3>
    <p>158 words!  Ada's original sentence may look what happens
      when two pickups taking
      out-of-date dictionaries to the landfill collide.
      There is, in fact, a good deal of structure and meaning in all those
      words.
      First, let take it as bullet points:
    </p>
    <ul>
      <li>1. Math is awesome just for being itself. </li>
      <li>2. Math describes and predicts the external world.</li>
      <li>3. No better way to figure out what is really behind our
        existence.</li>
      <li>4. We have found a way to do more and better math.
        Let's go for it.</li>
      </ul>
    <p>
      Ada is in fact quickly connecting her new science of software to
      the history of philosophy in the West.
      Bullet point 1 alludes to the Platonist view of mathematics.
      Bullet point 2 alludes to the scientific one pioneered by
      Galileo and Newton.
      Bullet point 3 connects it with a post-Classical world view.
      Ada's language is Christian but her idea here is one that Einstein
      would have had no trouble with.
      And bullet point 4 is the call to action.
    </p>
    <p>
      When we come to discuss the parse in detail,
      we'll see that it follows this structure.
      As an aside,
      note Ada' mention of "logical completeness" as one of the virtues of math.
      G&ouml;del came along nearly a century later and showed this vision,
      which went back to the Greeks, was an illusion.
      So Ada did not predict everything.
      On the other hand,
      G&ouml;del's result was also a complete surprise to Johnny von Neumann,
      who was in the room that day.
    </p>
    <h3>To learn more</h3>
    <p>
      <a href="https://metacpan.org/module/Marpa::R2">Marpa::R2
        is available on CPAN</a>.
      A list of my Marpa tutorials can be found
      <a href="http://jeffreykegler.github.io/Ocean-of-Awareness-blog/metapages/annotated.html#TUTORIAL">
        here</a>.
      There is
      <a href="http://marpa-guide.github.io/chapter1.html">
        a new tutorial by Peter Stuifzand</a>.
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/">
        The Ocean of Awareness blog</a>
      focuses on Marpa,
      and it has
      <a href="http://jeffreykegler.github.io/Ocean-of-Awareness-blog/metapages/annotated.html">an annotated guide</a>.
      Marpa also has
      <a href="http://jeffreykegler.github.com/Marpa-web-site/">a web page</a>.
      For questions, support and discussion, there is a
      Google Group:
      <code>marpa-parser@googlegroups.com</code>.
      Comments on this post can be made there.
    </p>
