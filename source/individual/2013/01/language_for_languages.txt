A Language for writing languages
  <p>
      <!--
      marpa_r2_html_fmt --no-added-tag-comment --no-ws-ok-after-start-tag
      -->
      <a href="https://metacpan.org/release/Marpa-R2">
      Marpa::R2</a>'s
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/announce_scanless.html">
      Scanless interface</a>
      is not yet two weeks old,
      but already there are completed applications.
      Significantly, two of them are for work.
      <h3>A JSON Parser</h3>
      <p>The non work-related application is
      <a href="https://gist.github.com/4447349">
      a JSON parser</a>.
      Given what it does,
      it easily could have been work-related.
      And given it's been available for a few days as a gist,
      it could well be in production use somewhere.
      It was written by Peter Stuifzand,
      runs 185 lines
      and took him less than 30 minutes to write.
      Peter reports that it was a matter of
      typing in the grammar,
      and adding a few Perl functions to provide the semantics.
      <p>
      There are, of course, other JSON parsers out there,
      many of which run faster.
      These, however, took weeks to write.
      If you are, for example,
      thinking of
      <a href="http://bolinfest.com/essays/json.html">
      extending JSON</a>,
      and development time is a major consideration,
      the Marpa-based solution will be attractive.
      <h3>Printer escape codes</h3>
      Peter also did
      <a href="https://groups.google.com/d/msg/marpa-parser/n4ouLW0e6P8/vdrku9fczZEJ">
      a Marpa-based language for work</a> --
      a solution to the problem of printer escape codes.
      For those unfamilar, a printer's special features can often be invoked
      by "escape sequences" --
      byte sequences which control things like cursor motion, color, character sets,
      graphics, etc., etc.
      It's nice to invoke them with a set of well-named functions.
      <p>Escape sequences are usually repetitive,
      and when complex, are usually not complex in an interesting way.
      They can be programmed with regex or eval hacks.
      But this time Peter chose to use Marpa to write 
      a mini-language that specifies 
      escape sequences and compiles into Perl code,
      in the hope it would be faster.
      He was done in a hour.
      <h3>A log file query language</h3>
      <p>Meanwhile, an interesting and adventurous language effort
      was underway on
      the other side of the Atlantic, where Paul Bennett,
      <a href="https://plus.google.com/u/0/110360907592575381901/posts/XdTPRHvbA8w#110360907592575381901/posts/XdTPRHvbA8w">
      faced with analyzing lots of nginx log files,
      decided a powerful custom log query language was
      just what his issue needed</a>.
      Where Peter has started with two languages that were already
      fully designed and formally specified,
      Paul needed to design his language from scratch.
      Peter had written Marpa-based languages prior to my release
      of the Scanless interface, and I have to believe his development
      times include
      no learning curve.
      Paul apparently was able to teach himself what he needed
      to know about
      Marpa's Scanless
      interface starting from a gist.
      (He doesn't say, but it might have been the one for
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/dsl_simpler2.html">
      this post</a>.)
      <p>Like Peter's escape sequence language,
      Paul's log query language program compiles to Perl.
      Its writing and debugging
      were spread out over 3 days.
      Paul reports that his language is on the job already,
      but that
      needs some clean-up before going in CPAN.
      I look forward to seeing it
      -- the snippets he shows seem to include 
      strings, integers and timestamps as supported types;
      regexes;
      adn the standard comparision and boolean operators,
      plus "any", "between" and "one" operators.
      Pretty good for 3 days.
      Perhaps a lot of nasty problems snuggled away
      in log files may soon find their
      hiding places not nearly as safe 
      as they've come to expect.
    <h3>Comments</h3>
    <p>
      Comments on this post
      can be sent to the Marpa Google Group:
      <code>marpa-parser@googlegroups.com</code>
    </p>
