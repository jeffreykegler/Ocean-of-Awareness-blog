A language for writing languages
  <p>
      <!--
      marpa_r2_html_fmt --no-added-tag-comment --no-ws-ok-after-start-tag
      -->
      <a href="https://metacpan.org/release/Marpa-R2">
      Marpa::R2</a>'s
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/announce_scanless.html">
      Scanless interface</a>
      is not yet two weeks old,
      but already there are completed applications.
      Significantly, two of them are for work.
      <h3>A JSON Parser</h3>
      <p>The non-work-related application is
      <a href="https://gist.github.com/4447349">
      a JSON parser</a>.
      Given what it does,
      it easily could have been work-related.
      (It's been available for a few days as a gist,
      so it may well be in production use somewhere.)
      It was written by Peter Stuifzand,
      runs 185 lines
      and took him less than 30 minutes to write.
      Peter reports that it was a matter of
      typing in the grammar,
      and adding a few Perl functions to provide the semantics.
      <p>
      There are, of course, other JSON parsers out there,
      many of which run faster.
      These, however, took weeks to write.
      If you are, for example,
      thinking of
      <a href="http://bolinfest.com/essays/json.html">
      extending JSON</a>,
      and development time is a major consideration,
      the Marpa-based solution will be attractive.
      <h3>Printer escape codes</h3>
      Peter also did
      <a href="https://groups.google.com/d/msg/marpa-parser/n4ouLW0e6P8/vdrku9fczZEJ">
      a Marpa-based language for work</a> --
      a solution to the problem of printer escape codes.
      For those unfamilar, a printer's special features can often be invoked
      by "escape sequences" --
      byte sequences which control things like cursor motion, color, character sets,
      graphics, etc., etc.
      It's nice to invoke them with a set of well-named functions.
      <p>Escape sequences are usually repetitive,
      and when complex, are usually not complex in an interesting way.
      They can be programmed with regex or eval hacks.
      But this time
      Peter chose to write 
      a mini-language that specifies 
      escape sequences,
      and to use Marpa to
      compile the mini-language into Perl code.
      He was done in a hour.
      <h3>A log file query language</h3>
      <p>Meanwhile, an interesting and adventurous language effort
      was underway on
      the other side of the Atlantic, where Paul Bennett,
      faced with analyzing lots of nginx log files,
      <a href="https://plus.google.com/u/0/110360907592575381901/posts/XdTPRHvbA8w#110360907592575381901/posts/XdTPRHvbA8w">
      decided a powerful custom log query language was
      the best way to address his issue</a>.
      Paul needed to design and specify his language from scratch.
      Paul was also facing a learning curve,
      but he read the gist for a Scanless interface example,
      and apparently was able to teach himself quickly from there.
      (He doesn't say, but it might have been the one for
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/dsl_simpler2.html">
      this post</a>.)
      <p>Like Peter's escape sequence language,
      Paul's log query language program compiles to Perl.
      Its writing and debugging
      were spread out over 3 days.
      Paul reports that his language is on the job already,
      but that
      it needs some clean-up before going onto CPAN.
      <p>
      The snippets Paul shows are enticing.
      The language seems to include 
      strings, integers and timestamps as supported types;
      regexes;
      a full set of comparison and boolean operators;
      and helpful new "any", "between" and "one" operators.
      Pretty good for three days.
      A lot of nasty problems snuggled away
      in log files may find their
      hiding places are not nearly as safe 
      as they have been able to expect.
    <h3>Where to start</h3>
    <p>If you're interested in learning more about Marpa's Scanless
    interface, there is
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/dsl_simpler2.html">
      a tutorial</a>.
      Additionally,
      the announcement of the Scanless interface contained
      <a href="http://jeffreykegler.github.com/Ocean-of-Awareness-blog/individual/2013/01/announce_scanless.html">a
      mini-tutorial</a>.
    <h3>Comments</h3>
    <p>
      Comments on this post
      can be sent to the Marpa Google Group:
      <code>marpa-parser@googlegroups.com</code>
    </p>
