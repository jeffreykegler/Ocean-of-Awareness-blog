Marpa v. Perl regexes: some numbers
<p>
In this post, I pit Marpa against the Perl regex engine.
The example I will use is unanchored searching for balanced parentheses.
I have claimed that many problems now tackled with regexes are better
solved with a more powerful parser, like Marpa.
I believe the numbers in this post back up that claim.
</p>
<p>
To be very clear,
I am NOT claiming that Marpa should or can replace
regexes in general.
For each character,
all an <a href="#RE">RE</a>
(regular expression) engine needs to do
is to compute a transition from
one "state" to another state based on that character --
essentially a simple lookup.
It's the sort of thing a modern C compiler should optimize
into a series of machine instructions that
you can count
on the fingers of one hand.
</p>
Marpa is much more powerful than an regular expression engine,
and to deliver this power
Marpa makes a list of all the possibilities
for each
<a href="#TOKEN">token</a>.
Tricks are used to compress these per-token lists,
and Marpa's code to process them is heavily
optimized.
But even so,
Marpa's processing requires more than a handful of
machine instructions.
