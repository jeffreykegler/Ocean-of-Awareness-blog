Ringo Starr and Willy Sutton On Programming Languages
<p><a href="http://web2.airmail.net/gshultz/drumpage.html">Ringo Starr</a>: <blockquote>
I didn't play drums to make money. I played drums because I loved
them. [...] It was a conscious moment in my life when I said the rest
of things were getting in the way. I didn't do it to be [be]come rich and
famous, I did it because it was the love of my life.</blockquote>

<p>When asked why he robbed banks,
Willy Sutton is purported to have
said he did so because "that is where the money is".
<a href="http://en.wikipedia.org/wiki/Willie_Sutton#An_urban_legend">Mr Sutton set the
record straight for his
biographer</a>:
<blockquote>
I never said it. [...]  Why did I
rob banks? Because I enjoyed it. I loved it. I was more alive when I was
inside a bank, robbing it, than at any other time in my life.</blockquote>

<p>Money moves job indexes.
But where the following for a language is only cash-driven,
that following may become as broad as the ocean,
but it will never be more than a millimeter deep.
And it will dry up the moment the cash disappears.

<p>CPAN and Perlmonks would
not exist if people did not love
to write and use Perl.
Do other languages have similar things?
The extent to which they do is the best indicator
of how much
people love to write code in that language.

<p>The funny thing about following what you love and ignoring
the money -- it's at least as likely to make you money as focusing
on money.  
Mr. Starkey made a dime or two drumming.
Mr. Sutton's record was more mixed, but this can be attributed
entirely to the unusually heavy regulatory
burden imposed on his calling.

<p>What about companies with large investments in custom code?
What about the interests of their shareholders?
That's more than a fair question -- it's an important one.

<p>But
how much sense does it make to
lock an investment into a technology,
the first and last thought of whose practitioners
is how much can they can squeeze you for?
How much sense does it make to lock an investment
into a technology that is avoided by those who
do quality work, not for money, but for its own sake?

<p>There are other languages which are very serious
competitors to Perl.
Python has its attractions.
And there are people who both love what they do
and very much know what they are doing who prefer Python.
But the real balance of power between the Python and Perl
will never show up in a job index.
